name: Docker CI/CD Pipeline

on:
  push:
    branches: [myapp]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t myapp .
        echo "=== Список образов ==="
        docker images

    - name: Test container
      run: |
        # Запускаем контейнер в фоновом режиме
        echo "=== Запуск контейнера ==="
        docker run -d --name testapp -p 5000:5000 myapp
        
        # Ждем 10 секунд и проверяем состояние
        echo "=== Ожидание старта ==="
        sleep 10
        
        echo "=== Диагностика ==="
        echo "1. Состояние контейнера:"
        docker ps -a
        echo "\n2. Логи контейнера:"
        docker logs testapp || true
        echo "\n3. Проверка процессов:"
        docker exec testapp ps aux || true
        echo "\n4. Проверка портов:"
        docker port testapp || true
        
        # Проверяем доступность приложения
        echo "\n=== Тестирование приложения ==="
        if curl -s --retry 3 --retry-delay 5 http://localhost:5000 | grep "Hello, Docker"; then
          echo "✓ Приложение работает корректно"
          docker stop testapp
          exit 0
        else
          echo "× Приложение не отвечает"
          echo "=== Дополнительная диагностика ==="
          docker exec testapp ls -la /app || true
          docker exec testapp cat /app/app.py || true
          exit 1
        fi

    - name: Save image
      if: success()
      run: |
        mkdir -p artifacts
        docker save myapp -o artifacts/myapp.tar
      
    - uses: actions/upload-artifact@v4
      if: success()
      with:
        name: myapp-image
        path: artifacts/myapp.tar

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/download-artifact@v4
      with:
        name: myapp-image
        path: artifacts

    - name: Load image
      run: docker load -i artifacts/myapp.tar

    - name: Deploy to production
      run: |
        docker run -d --name myapp -p 5000:5000 myapp
        sleep 10
        echo "=== Состояние production-контейнера ==="
        docker ps -a
        echo "=== Логи production-контейнера ==="
        docker logs myapp
