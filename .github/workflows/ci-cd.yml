name: Docker CI/CD

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t myapp .

      - name: Run tests
        run: |
          # Запускаем контейнер с логированием
          docker run -d --name testapp -p 5000:5000 myapp
          
          # Ждем старта с проверкой логов
          echo "Ожидание старта контейнера..."
          timeout 60 bash -c 'until docker logs testapp 2>&1 | grep -q "Running on"; do sleep 2; echo "Waiting..."; done'
          
          # Проверяем доступность
          echo "Проверка доступности приложения..."
          if ! curl -s --retry 5 --retry-delay 3 http://localhost:5000 | grep -q "Hello, Docker"; then
            echo "::error::Тест не пройден: приложение не вернуло ожидаемый текст"
            docker logs testapp
            exit 1
          fi
          
          echo "Тест пройден успешно!"
          docker stop testapp

      - name: Save image
        run: docker save myapp -o myapp.tar
        if: success()

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        run: |
          docker tag myapp ${{ secrets.DOCKER_USER }}/myapp:latest
          docker push ${{ secrets.DOCKER_USER }}/myapp:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USER }}/myapp:latest
            docker stop myapp || true
            docker rm myapp || true
            docker run -d -p 5000:5000 --name myapp ${{ secrets.DOCKER_USER }}/myapp:latest
